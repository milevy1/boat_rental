class Dock
  attr_reader :name,
              :max_rental_time,
              :rental_log,
              :return_log

  def initialize(name, max_rental_time)
    @name = name
    @max_rental_time = max_rental_time
    @rental_log = {}
    @return_log = []
  end

  def rent(boat, renter)
    @rental_log[boat] = renter
  end

  def charge(boat)
    result = {}
    renter = @rental_log[boat]
    if boat.hours_rented < @max_rental_time
      hours_billable = boat.hours_rented
    else
      hours_billable = @max_rental_time
    end

    result[:card_number] = renter.credit_card_number
    result[:amount] = boat.price_per_hour * hours_billable
    return result
  end

  def return(boat)
    @return_log << charge(boat)
    @rental_log[boat] = nil
  end
  
  #
  # * `return` - This method takes a `Boat` object as an argument.
  #       When this method is called, it signifies that a boat has been
  #       returned and is no longer being rented.

  # * `log_hour` - This method takes no arguments. When it is called,
  #                 all boats that are currently rented have been rented
  # =>              an additional hour.

  # * `revenue` - This method takes no arguments. It returns the
  # =>            total revenue generated by charging all boats
  # =>            that have been rented and returned. A charge for a
  # =>            boat follows the same rules as iteration 3.

end
